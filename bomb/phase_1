
*arg1 = (%rdi) = "this is nice"  //my input string
*arg2 = (%rsi) = "this is nice"
0000000000400ee0 <phase_1>:
  400ee0:	48 83 ec 08          	sub    $0x8,%rsp       					// Allocate 8 bytes for stack frame
  400ee4:	be 00 24 40 00       	mov    $0x402400,%esi    				// *arg2 = (%esi) = "Border relations with Canada have never been better."
  400ee9:	e8 4a 04 00 00       	callq  401338 <strings_not_equal>  		// Call strings_not_equal(arg1, arg2)
  400eee:	85 c0                	test   %eax,%eax						// if %eax == 0, not boom!
  400ef0:	74 05                	je     400ef7 <phase_1+0x17>
  400ef2:	e8 43 05 00 00       	callq  40143a <explode_bomb>
  400ef7:	48 83 c4 08          	add    $0x8,%rsp
  400efb:	c3                   	retq  



*arg1 = (%rdi) = "this is nice"
*arg2 = (%rsi) = "Border relations with Canada have never been better." 
  0000000000401338 <strings_not_equal>:
  401338:	41 54                	push   %r12  							// Save %r12
  40133a:	55                   	push   %rbp  							// Save %rbp
  40133b:	53                   	push   %rbx								// Save %rbx
  40133c:	48 89 fb             	mov    %rdi,%rbx						// %rbx = arg1
  40133f:	48 89 f5             	mov    %rsi,%rbp						// %rbp = arg2  
  401342:	e8 d4 ff ff ff       	callq  40131b <string_length>			// Call string_length(arg1), return %eax = 12 ("this is nice")
  401347:	41 89 c4             	mov    %eax,%r12d						// %r12d = 12
  40134a:	48 89 ef             	mov    %rbp,%rdi						// %rdi = arg2
  40134d:	e8 c9 ff ff ff       	callq  40131b <string_length>           // Return %eax = 52 ("Border relations with Canada have never been better.")
  401352:	ba 01 00 00 00       	mov    $0x1,%edx                        // %edx = 1
  401357:	41 39 c4             	cmp    %eax,%r12d						// if my_string.length != answer.length, goto 40139b
  40135a:	75 3f                	jne    40139b <strings_not_equal+0x63>  
  40135c:	0f b6 03             	movzbl (%rbx),%eax						// Compare char one by one		
  40135f:	84 c0                	test   %al,%al                          // if %al == 0, not boom!
  401361:	74 25                	je     401388 <strings_not_equal+0x50>
  401363:	3a 45 00             	cmp    0x0(%rbp),%al                    // if not equal, boom!
  401366:	74 0a                	je     401372 <strings_not_equal+0x3a>  
  401368:	eb 25                	jmp    40138f <strings_not_equal+0x57>
  40136a:	3a 45 00             	cmp    0x0(%rbp),%al                    // the loop
  40136d:	0f 1f 00             	nopl   (%rax)
  401370:	75 24                	jne    401396 <strings_not_equal+0x5e>
  401372:	48 83 c3 01          	add    $0x1,%rbx						// move to next char
  401376:	48 83 c5 01          	add    $0x1,%rbp						// move to next char
  40137a:	0f b6 03             	movzbl (%rbx),%eax
  40137d:	84 c0                	test   %al,%al
  40137f:	75 e9                	jne    40136a <strings_not_equal+0x32>  // goto loop
  401381:	ba 00 00 00 00       	mov    $0x0,%edx
  401386:	eb 13                	jmp    40139b <strings_not_equal+0x63>
  401388:	ba 00 00 00 00       	mov    $0x0,%edx
  40138d:	eb 0c                	jmp    40139b <strings_not_equal+0x63>
  40138f:	ba 01 00 00 00       	mov    $0x1,%edx
  401394:	eb 05                	jmp    40139b <strings_not_equal+0x63>  
  401396:	ba 01 00 00 00       	mov    $0x1,%edx
  40139b:	89 d0                	mov    %edx,%eax						// Return %eax = 1
  40139d:	5b                   	pop    %rbx
  40139e:	5d                   	pop    %rbp
  40139f:	41 5c                	pop    %r12
  4013a1:	c3                   	retq   


/** Calculate how many characters are in the string */
// *arg1 = (%rdi) = "this is nice"  
000000000040131b <string_length>:
  40131b:	80 3f 00             	cmpb   $0x0,(%rdi)                       // if *arg1 = 0, return 
  40131e:	74 12                	je     401332 <string_length+0x17>
  401320:	48 89 fa             	mov    %rdi,%rdx						 // %rdx = arg1
  401323:	48 83 c2 01          	add    $0x1,%rdx 						 // (%rdx) = "his is nice"
  401327:	89 d0                	mov    %edx,%eax						 // %eax = 6305665, %edi = 6305664
  401329:	29 f8                	sub    %edi,%eax						 // %eax = 1
  40132b:	80 3a 00             	cmpb   $0x0,(%rdx)						 // if *arg1 != 0, goto loop
  40132e:	75 f3                	jne    401323 <string_length+0x8>
  401330:	f3 c3                	repz retq 
  401332:	b8 00 00 00 00       	mov    $0x0,%eax 			
  401337:	c3                   	retq   
