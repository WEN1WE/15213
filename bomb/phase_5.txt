  # (0x401338): 
  # m  a  d  u  i  e  r  s  n  f  o  t  v  b  y  l
  # 0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F
  # f : 9 : 0x69 : i
  # l : F : 0x6F : o
  # y : E : 0x6E : n
  # e : 5 : 0x65 : e
  # r : 6 : 0x66 : f
  # s : 7 : 0x67 : g
  # input should be ionefg

0000000000401062 <phase_5>:
  401062:	53                   	push   %rbx
  401063:	48 83 ec 20          	sub    $0x20,%rsp    # Allocate 0x20 bytes for stack frame
  401067:	48 89 fb             	mov    %rdi,%rbx     # (%rbx) = my input
  40106a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax    # %rax = 0x498e5ea9696ef500
  401073:	48 89 44 24 18       	mov    %rax,0x18(%rsp)    # (%rsp+0x18) =  0x498e5ea9696ef500
  401078:	31 c0                	xor    %eax,%eax    # %eax = 0
  40107a:	e8 9c 02 00 00       	callq  40131b <string_length> # input string should be six bytes.
  40107f:	83 f8 06             	cmp    $0x6,%eax 
  401082:	74 4e                	je     4010d2 <phase_5+0x70>
  401084:	e8 b1 03 00 00       	callq  40143a <explode_bomb>
  401089:	eb 47                	jmp    4010d2 <phase_5+0x70>

  # the loop
  40108b:	0f b6 0c 03          	movzbl (%rbx,%rax,1),%ecx   
  40108f:	88 0c 24             	mov    %cl,(%rsp)    
  401092:	48 8b 14 24          	mov    (%rsp),%rdx   
  401096:	83 e2 0f             	and    $0xf,%edx                                                                                   
  401099:	0f b6 92 b0 24 40 00 	movzbl 0x4024b0(%rdx),%edx    
  4010a0:	88 54 04 10          	mov    %dl,0x10(%rsp,%rax,1)  
  4010a4:	48 83 c0 01          	add    $0x1,%rax   
  4010a8:	48 83 f8 06          	cmp    $0x6,%rax
  4010ac:	75 dd                	jne    40108b <phase_5+0x29>   # loop for six times

  4010ae:	c6 44 24 16 00       	movb   $0x0,0x16(%rsp)
  4010b3:	be 5e 24 40 00       	mov    $0x40245e,%esi    # (esi) = "flyers"
  4010b8:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi    # if (%rsp + 0x10) = "flyers", not boom!
  4010bd:	e8 76 02 00 00       	callq  401338 <strings_not_equal>
  4010c2:	85 c0                	test   %eax,%eax
  4010c4:	74 13                	je     4010d9 <phase_5+0x77>
  4010c6:	e8 6f 03 00 00       	callq  40143a <explode_bomb>
  4010cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4010d0:	eb 07                	jmp    4010d9 <phase_5+0x77>
  4010d2:	b8 00 00 00 00       	mov    $0x0,%eax    # %eax = 0
  4010d7:	eb b2                	jmp    40108b <phase_5+0x29>    # goto 40108b
  4010d9:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  4010de:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  4010e5:	00 00 
  4010e7:	74 05                	je     4010ee <phase_5+0x8c>
  4010e9:	e8 42 fa ff ff       	callq  400b30 <__stack_chk_fail@plt>
  4010ee:	48 83 c4 20          	add    $0x20,%rsp
  4010f2:	5b                   	pop    %rbx
  4010f3:	c3                   	retq   